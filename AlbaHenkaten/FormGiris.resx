<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AABkNwDTZDcAyGQ3AEVkNwDbZDcAn2Q3AFpkNwDtZDcAcWQ3AINkNwDoZDcATmQ3ALFkNwDOZDcARGQ3
        ANZkNwC/ZDcA1mQ3AMlkNwBNZDcA2mQ3AKNkNwBiZDcA6mQ3AHdkNwCJZDcA5mQ3AFdkNwC0ZDcAzmQ3
        AE1kNwDVZDcAw2Q3AElkNwBJZDcACGQ3AFRkNwAzZDcAEmQ3AF5kNwAcZDcAJWQ3AFtkNwAMZDcAPGQ3
        AExkNwAIZDcAUWQ3AD5kNwDeZDcA0GQ3AFFkNwDhZDcAqWQ3AGZkNwDxZDcAfGQ3AI5kNwDtZDcAW2Q3
        ALtkNwDVZDcAUWQ3ANxkNwDKZDcArmQ3AKZkNwA3ZDcAtWQ3AINkNwBJZDcAxGQ3AFxkNwBrZDcAwGQ3
        AD9kNwCSZDcAqmQ3ADdkNwCxZDcAnWQ3AFlkNwBYZDcAD2Q3AGRkNwA/ZDcAGmQ3AG9kNwAmZDcAMGQ3
        AGxkNwAUZDcASmQ3AFxkNwAOZDcAYWQ3AE1kNwDxZDcA4GQ3AF5kNwDyZDcAuWQ3AHRkNwD/ZDcAi2Q3
        AJ1kNwD9ZDcAaGQ3AMtkNwDmZDcAXmQ3AO1kNwDdZDcAf2Q3AHtkNwAgZDcAiGQ3AF1kNwAuZDcAlmQ3
        AD1kNwBKZDcAkmQ3ACZkNwBqZDcAf2Q3ACBkNwCFZDcAcGQ3AIBkNwB8ZDcAIWQ3AIpkNwBeZDcAL2Q3
        AJdkNwA+ZDcASmQ3AJNkNwAnZDcAa2Q3AIBkNwAgZDcAhmQ3AHJkNwDxZDcA4GQ3AF5kNwDyZDcAuWQ3
        AHRkNwD/ZDcAi2Q3AJ1kNwD9ZDcAaGQ3AMtkNwDmZDcAXWQ3AOxkNwDdZDcAWGQ3AFhkNwAOZDcAY2Q3
        AD9kNwAZZDcAb2Q3ACVkNwAvZDcAbGQ3ABNkNwBKZDcAW2Q3AA5kNwBgZDcATGQ3AK9kNwCnZDcAOGQ3
        ALdkNwCEZDcASmQ3AMZkNwBdZDcAbGQ3AMJkNwBAZDcAk2Q3AKxkNwA3ZDcAsmQ3AJ5kNwDdZDcAz2Q3
        AFFkNwDgZDcAqGQ3AGZkNwDwZDcAfGQ3AI1kNwDsZDcAWmQ3ALpkNwDVZDcAUGQ3ANtkNwDKZDcASWQ3
        AElkNwAIZDcAVGQ3ADNkNwARZDcAXmQ3ABxkNwAlZDcAW2Q3AAxkNwA8ZDcATGQ3AAhkNwBRZDcAPmQ3
        ANdkNwDKZDcATmQ3ANtkNwCkZDcAYmQ3AOtkNwB4ZDcAiWQ3AOdkNwBXZDcAtWQ3AM9kNwBNZDcA1mQ3
        AMRkNwDSZDcAx2Q3AERkNwDaZDcAnmQ3AFlkNwDrZDcAcGQ3AIJkNwDnZDcATWQ3ALBkNwDNZDcAQ2Q3
        ANVkNwC+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>